#!/usr/bin/env node

/**
 * TVCors Proxy ÂêØÂä®ËÑöÊú¨
 * ÊîØÊåÅÈÄöËøáÁéØÂ¢ÉÂèòÈáè PORT ËÆæÁΩÆÁ´ØÂè£
 */

import { spawn } from 'child_process';
import path from 'path';

// Ëé∑ÂèñÁ´ØÂè£ÔºåÈªòËÆ§3001
const port = process.env.PORT || 3001;

// Ëé∑ÂèñÂëΩ‰ª§Ë°åÂèÇÊï∞
const args = process.argv.slice(2);
const isDev = args.includes('--dev') || args.includes('-d');

// ÊûÑÂª∫ÂëΩ‰ª§
const command = process.platform === 'win32' ? 'npx.cmd' : 'npx';
const commandArgs = [
  'next',
  isDev ? 'dev' : 'start',
  '-p',
  port.toString()
];

console.log(`üöÄ Starting TVCors Proxy on port ${port}`);
console.log(`üìù Command: ${command} ${commandArgs.join(' ')}`);

// ÂêØÂä®Next.js
const child = spawn(command, commandArgs, {
  stdio: 'inherit',
  shell: process.platform === 'win32' // WindowsÈúÄË¶Åshell
});

// Â§ÑÁêÜÈÄÄÂá∫‰ø°Âè∑
child.on('exit', (code) => {
  process.exit(code || 0);
});

// Â§ÑÁêÜÈîôËØØ
child.on('error', (error) => {
  console.error('‚ùå Failed to start server:', error.message);
  process.exit(1);
});

// ‰ºòÈõÖÈÄÄÂá∫
process.on('SIGINT', () => {
  console.log('\n‚èπÔ∏è  Shutting down server...');
  child.kill('SIGINT');
});

process.on('SIGTERM', () => {
  console.log('\n‚èπÔ∏è  Shutting down server...');
  child.kill('SIGTERM');
});
